1
00:00:03,000 --> 00:00:08,000
Let's create some events that make our menus actually do something worthwhile.

2
00:00:08,000 --> 00:00:15,000
Let's start with a simple example, the exit menu item. To create the event code, all we need to do is select

3
00:00:15,000 --> 00:00:21,000
the menu item and double-click. NetBeans created our method here.

4
00:00:21,000 --> 00:00:35,000
To close the application, we'll use a common method, System.exit 0.

5
00:00:35,000 --> 00:00:55,000
Let's see if it works. (Running) That's perfect. Now let's try again and use the keyboard shortcut Ctrl+Q.

6
00:00:55,000 --> 00:01:03,000
That works as well. Now when we built our desktop application, we added the closable property to

7
00:01:03,000 --> 00:01:10,000
jInternalFrame1, but had no option to reopen that window. Let's fix that now.

8
00:01:10,000 --> 00:01:19,000
So let's double-click the Window 1 menu item. I want to search for the code that was initially generated to

9
00:01:19,000 --> 00:01:42,000
make jInternalFrame1 visible. (Searching) First we'll need jInternalFrame.setVisible(true), and I'll copy

10
00:01:42,000 --> 00:01:51,000
and paste that into our method. And since this application uses a desktop pane, I'll also need to add the

11
00:01:51,000 --> 00:02:06,000
internal frame to the desktop again. I can do that with this code here, which adds the internal frame to the

12
00:02:06,000 --> 00:02:33,000
desktop pane's DEFAULT_LAYER. That's all we need, so let's run it. (Running)

13
00:02:33,000 --> 00:02:40,000
First, let's close Window1, then try out our menu. That works.

14
00:02:40,000 --> 00:02:48,000
Let's also try out the shortcut, Ctrl+1. That works too. Now let's do something extra special.

15
00:02:48,000 --> 00:02:58,000
I'm going to show you how to create another GUI and link DesktopGUI to it.

16
00:02:58,000 --> 00:03:13,000
So let's create a New JFrame Form and call it AboutGUI and the same package, com.Pluralsight.

17
00:03:13,000 --> 00:03:34,000
This is going to be an about window for our application, so let's make it smaller and add a text area. (Working)

18
00:03:34,000 --> 00:03:40,000
Let's select lineWrap and wrapStyleWord, then create some fake text.

19
00:03:40,000 --> 00:03:54,000
Of course you could add anything here that you wish. Then let's go back to our DesktopGUI, create a new menu

20
00:03:54,000 --> 00:04:09,000
item under the Help menu called About. Let's double-click it and generate the event method.

21
00:04:09,000 --> 00:04:15,000
By the way, you may have noticed that the event methods created here are the ActionPerformed methods just like buttons.

22
00:04:15,000 --> 00:04:29,000
Now to create a link to AboutGUI, I type new AboutGUI.setVisible(true), and that's it.

23
00:04:29,000 --> 00:04:56,000
Let's run it. (Running) Now the About menu calls AboutGUI. Oops, when I close AboutGUI, DesktopGUI also closes.

24
00:04:56,000 --> 00:05:03,000
No worries. To fix that, let's go to AboutGUI, select its JFrame, and change the property,

25
00:05:03,000 --> 00:05:10,000
defaultCloseOperation, which is by default set to exit on close.

26
00:05:10,000 --> 00:05:17,000
Let's change it to DISPOSE, which will only dispose of the AboutGUI window and not close our entire application.

27
00:05:17,000 --> 00:05:31,000
Let's go back to DesktopGUI and run it. (Running) Now the about window closes leaving our application still running.

28
00:05:31,000 --> 00:59:00,000
Just a bonus piece of useful knowledge for you. Next, we'll have a look at pop-up menus.

